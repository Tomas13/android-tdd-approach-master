apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'realm-android'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.example.androidtdd"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
    sourceSets {
        String sharedTestDir = 'src/sharedTest/java'
        String sharedResourceDir = 'src/sharedTest/resources'
        test {
            java.srcDir sharedTestDir
            resources.srcDirs += sharedResourceDir
        }
        androidTest {
            java.srcDir sharedTestDir
            resources.srcDirs += sharedResourceDir

        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:appcompat-v7:${supportLibraryVersion}"
    compile "com.android.support:design:${supportLibraryVersion}"
    compile "com.android.support:cardview-v7:${supportLibraryVersion}"

    // Dagger2 dependencies
    apt "com.google.dagger:dagger-compiler:${daggerVersion}"
    compile "com.google.dagger:dagger:${daggerVersion}"
    provided "javax.annotation:jsr250-api:1.0"

    // Setup Retrofit
    compile "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    compile "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    compile "com.squareup.retrofit2:adapter-rxjava:${retrofitVersion}"
    compile "com.squareup.okhttp3:logging-interceptor:${okhttpVersion}"

    // ButterKnife setup
    compile "com.jakewharton:butterknife:${butterKnifeVersion}"
    apt "com.jakewharton:butterknife-compiler:${butterKnifeVersion}"

    compile "com.github.bumptech.glide:glide:${glideVersion}"

    compile "com.android.support.test.espresso:espresso-idling-resource:$espressoVersion"

    // RxAndroid
    compile "io.reactivex:rxandroid:${rxAndroidVersion}"

    testCompile 'junit:junit:4.12'

    testCompile "org.robolectric:robolectric:${robolectricVersion}"
    testCompile "org.powermock:powermock-module-junit4:${powermockVersion}"
    testCompile "org.powermock:powermock-module-junit4-rule:${powermockVersion}"
    testCompile "org.powermock:powermock-api-mockito:${powermockVersion}"
    testCompile "org.powermock:powermock-classloading-xstream:${powermockVersion}"

    testCompile "org.mockito:mockito-core:${mockitoVersion}"
    testCompile "com.squareup.okhttp3:mockwebserver:${okhttpVersion}"

    androidTestCompile "com.squareup.okhttp3:mockwebserver:${okhttpVersion}"

    androidTestCompile("com.android.support.test.espresso:espresso-core:${espressoVersion}", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestCompile "com.github.fabioCollini:DaggerMock:${daggerMockVersion}"
    androidTestCompile "com.google.dexmaker:dexmaker:${dexMakerVersion}"
    androidTestCompile "com.google.dexmaker:dexmaker-mockito:${dexMakerVersion}"

    androidTestCompile("com.android.support.test:rules:${androidSupportTestRunner}", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestCompile("com.android.support.test:runner:${androidSupportTestRunner}", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestCompile("com.android.support.test.espresso:espresso-contrib:${espressoVersion}", {
        exclude group: 'com.android.support'
    })
    androidTestCompile("com.android.support.test.espresso:espresso-intents:${espressoVersion}", {
        exclude group: 'com.android.support'
    })

}
